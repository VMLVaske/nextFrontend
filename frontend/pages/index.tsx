import Head from 'next/head'
import Layout from '../components/layout'
import { Container, Button } from '@nextui-org/react';

import type { NextPage } from 'next';

import useAuthenticate from "../hooks/useAuthenticate"
import { useAddress, useDisconnect, useMetamask, useNetworkMismatch, useNetwork, ChainId } from '@thirdweb-dev/react';
import { useState } from "react";


const Home: NextPage = () => {

  const address = useAddress();
  const disconnect = useDisconnect();
  const connectWithMetamask = useMetamask();
  const { login, authenticate, logout } = useAuthenticate();
  const isMitsmatched = useNetworkMismatch();
  const [, switchNetwork] = useNetwork();

  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [authMessage, setAuthMessage] = useState("N/A");

  const signInWithEthereum = async () => {
    setAuthMessage("N/A");
    await connectWithMetamask();
    await login();
    setIsLoggedIn(true);
  }

  const authenticatedRequest = async () => {
    const res = await authenticate();
    if (res.ok) {
      const address = await res.json();
      setAuthMessage(`Succesfully authenticated to backend with address ${address}`);
    } else {
      setAuthMessage(`Failed to authenticate, backend responded with ${res.status} (${res.statusText})`);
    }
  }

  const logoutWallet = async () => {
    await logout();
    setIsLoggedIn(false);
    setAuthMessage("N/A");
  }

  return (
    <Layout>
      <div >
        <Head>
          <title>Test Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <Container fluid>
            <h1>
              Main Page
            </h1>
            <h2>Wallet Connection - Frontend</h2>
            {address ? (
              <Button onPress={disconnect}>Disconnect Wallet</Button>
            ) : (
              <Button onPress={connectWithMetamask}>Connect Wallet</Button>
            )}
            <p>Connected Address: {address || "N/A"}</p>

            <h2>Authentication - Backend</h2>

            {address ? (
              <>
                {isLoggedIn ? (
                  <Button onPress={logoutWallet}>Logout</Button>
                ) : (
                  <Button onPress={signInWithEthereum}>Login with Wallet</Button>
                )}

                <Button onPress={authenticatedRequest}>Authenticate</Button>

                <p>Logged In Address: {isLoggedIn ? address : "N/A"}</p>
                <p>Authentication: {authMessage}</p>
              </>
            ) : (
              <>Connect your wallet to access authentication.</>
            )}
            { !isMitsmatched ? (<div>You're on the right network</div>) : (<Button onPress={() => switchNetwork(ChainId.Mumbai)}>Switch Network</Button>)}2
          </Container>
        </main>
      </div>
    </Layout>
  )
}


export default Home;